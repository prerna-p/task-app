{"version":3,"sources":["context/TaskListContext.js","components/TaskForm.js","components/Task.js","components/TaskList.js","components/Header.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","editItem","setEditItem","useEffect","setItem","stringify","Provider","value","addTask","title","id","uuid","deleteTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","children","TaskForm","useContext","setTitle","onSubmit","e","preventDefault","className","onChange","target","type","placeholder","required","onClick","Task","TaskList","length","key","Header","App","ReactDOM","render","document","getElementById"],"mappings":"iNAGaA,EAAkBC,0BAgDhBC,EA9CiB,SAACC,GAC7B,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GAD3B,EAEbC,mBAASL,GAFI,mBAEhCM,EAFgC,KAEzBC,EAFyB,OAGPF,mBAAS,MAHF,mBAGhCG,EAHgC,KAGtBC,EAHsB,KAKvCC,qBAAU,WACNP,aAAaQ,QAAQ,QAASV,KAAKW,UAAUN,MAC9C,CAACA,IAwBJ,OACI,kBAACV,EAAgBiB,SAAjB,CACIC,MAAO,CACHR,QACAS,QA1BI,SAACC,GACbT,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEU,QAAOC,GAAIC,mBA0BzBC,WAvBO,SAACF,GAChBV,EAASD,EAAMc,QAAO,SAAAC,GAAI,OAAIA,EAAKJ,KAAOA,OAuBlCK,UApBM,WACdf,EAAS,KAoBDC,WACAe,SAlBK,SAACN,GACd,IAAMO,EAAOlB,EAAMmB,MAAK,SAAAJ,GAAI,OAAIA,EAAKJ,KAAOA,KAC5CR,EAAYe,IAiBJE,SAdK,SAACV,EAAOC,GACrB,IAAMU,EAAWrB,EAAMsB,KAAI,SAAAP,GAAI,OAAKA,EAAKJ,KAAOA,EAAK,CAAED,QAAOC,MAAOI,KACrEd,EAASoB,GACTlB,EAAY,SAaPV,EAAM8B,WCOJC,EAnDE,WAAO,IAAD,EAE8BC,qBAAWnC,GAAtDmB,EAFa,EAEbA,QAASO,EAFI,EAEJA,UAAWd,EAFP,EAEOA,SAAUkB,EAFjB,EAEiBA,SAFjB,EAGKrB,mBAAS,IAHd,mBAGdW,EAHc,KAGPgB,EAHO,KA4BrB,OARAtB,qBAAU,WAENsB,EADExB,EACOA,EAASQ,MAET,MAEV,CAACR,IAGF,0BAAMyB,SApBa,SAAAC,GACnBA,EAAEC,iBACG3B,EAIHkB,EAASV,EAAOR,EAASS,KAHzBF,EAAQC,GACRgB,EAAS,MAgBmBI,UAAU,QACtC,2BACEC,SA1Be,SAAAH,GACnBF,EAASE,EAAEI,OAAOxB,QA0BdA,MAAOE,EACPuB,KAAK,OACLH,UAAU,aACVI,YAAY,cACZC,UAAQ,IACV,yBAAKL,UAAU,WACb,4BAAQG,KAAK,SAASH,UAAU,oBAC7B5B,EAAW,YAAc,YAE5B,4BACEkC,QAASpB,EACTc,UAAU,iBAFZ,YCnBOO,EAtBF,SAAC,GAAc,IAAZtB,EAAW,EAAXA,KAAW,EACUU,qBAAWnC,GAApCuB,EADe,EACfA,WAAYI,EADG,EACHA,SAEpB,OACI,wBAAIa,UAAU,aACV,8BAAOf,EAAKL,OACZ,yBAAKoB,UAAU,WACX,4BACIM,QAAS,kBAAMvB,EAAWE,EAAKJ,KAC/BmB,UAAU,uBACV,uBAAGA,UAAU,sBAEjB,4BACIM,QAAS,kBAAMnB,EAASF,EAAKJ,KAC7BmB,UAAU,qBACV,uBAAGA,UAAU,mBCAlBQ,EAdE,WAAO,IACZtC,EAAUyB,qBAAWnC,GAArBU,MACR,OACI,6BACKA,EAAMuC,OACF,wBAAIT,UAAU,QACV9B,EAAMsB,KAAI,SAACP,GACR,OAAO,kBAAC,EAAD,CAAMA,KAAMA,EAAMyB,IAAKzB,EAAKJ,SAEjC,yBAAKmB,UAAU,YAAf,+BCHXW,EARA,WACb,OACE,yBAAKX,UAAU,UACb,+CCkBSY,EAhBH,WACR,OACI,kBAAC,EAAD,KACI,yBAAKZ,UAAU,aACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,QACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,WCXxBa,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.502f4d67.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nexport const TaskListContext = createContext()\r\n\r\nconst TaskListContextProvider = (props) => {\r\n    const initialState = JSON.parse(localStorage.getItem('tasks')) || [];\r\n    const [tasks, setTasks] = useState(initialState);\r\n    const [editItem, setEditItem] = useState(null);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('tasks', JSON.stringify(tasks))\r\n    }, [tasks])\r\n\r\n    const addTask = (title) => {\r\n        setTasks([...tasks, { title, id: uuid() }])\r\n    };\r\n\r\n    const deleteTask = (id) => {\r\n        setTasks(tasks.filter(task => task.id !== id));\r\n    }\r\n\r\n    const clearList = () => {\r\n        setTasks([]);\r\n    }\r\n\r\n    const findItem = (id) => {\r\n        const item = tasks.find(task => task.id === id);\r\n        setEditItem(item);\r\n    }\r\n\r\n    const editTask = (title, id) => {\r\n        const newTasks = tasks.map(task => (task.id === id ? { title, id } : task));\r\n        setTasks(newTasks);\r\n        setEditItem(null);\r\n    }\r\n    return (\r\n        <TaskListContext.Provider\r\n            value={{\r\n                tasks,\r\n                addTask,\r\n                deleteTask,\r\n                clearList,\r\n                editItem,\r\n                findItem,\r\n                editTask,\r\n            }}>\r\n            {props.children}\r\n        </TaskListContext.Provider>)\r\n};\r\n\r\nexport default TaskListContextProvider;","import React, { useContext, useState, useEffect } from 'react'\r\nimport { TaskListContext } from '../context/TaskListContext'\r\n\r\nconst TaskForm = () => {\r\n\r\n  const { addTask, clearList, editItem, editTask } = useContext(TaskListContext);\r\n  const [title, setTitle] = useState('');\r\n\r\n  const handleChange = e => {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (!editItem) {\r\n      addTask(title);\r\n      setTitle('');\r\n    } else {\r\n      editTask(title, editItem.id);\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (editItem) {\r\n      setTitle(editItem.title);\r\n    } else {\r\n      setTitle('');\r\n    }\r\n  }, [editItem])\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form\">\r\n      <input\r\n        onChange={handleChange}\r\n        value={title}\r\n        type=\"text\"\r\n        className=\"task-input\"\r\n        placeholder=\"Add task...\"\r\n        required />\r\n      <div className=\"buttons\">\r\n        <button type=\"submit\" className=\"btn add-task-btn\">\r\n          {editItem ? 'edit task' : 'add task'}\r\n        </button>\r\n        <button\r\n          onClick={clearList}\r\n          className=\"btn clear-btn\">\r\n          clear\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TaskForm\r\n","import React, { useContext } from 'react'\r\nimport { TaskListContext } from '../context/TaskListContext'\r\n\r\nconst Task = ({ task }) => {\r\n    const { deleteTask, findItem } = useContext(TaskListContext);\r\n\r\n    return (\r\n        <li className=\"list-item\">\r\n            <span>{task.title}</span>\r\n            <div className=\"buttons\">\r\n                <button\r\n                    onClick={() => deleteTask(task.id)}\r\n                    className=\"btn-delete task-btn\">\r\n                    <i className=\"fas fa-trash-alt\"></i>\r\n                </button>\r\n                <button\r\n                    onClick={() => findItem(task.id)}\r\n                    className=\"btn-edit task-btn\">\r\n                    <i className=\"fas fa-pen\"></i>\r\n                </button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React, { useContext } from 'react'\r\nimport { TaskListContext } from '../context/TaskListContext'\r\nimport Task from './Task';\r\n\r\nconst TaskList = () => {\r\n    const { tasks } = useContext(TaskListContext);\r\n    return (\r\n        <div>\r\n            {tasks.length ?\r\n                (<ul className=\"list\">\r\n                    {tasks.map((task) => {\r\n                        return <Task task={task} key={task.id} />;\r\n                    })}\r\n                </ul>) : (<div className=\"no-tasks\">No tasks yet, create one!</div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskList\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1> Task Manager</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport '../App.css'\r\nimport TaskForm from './TaskForm'\r\nimport TaskList from './TaskList'\r\nimport Header from './Header'\r\nimport TaskListContextProvider from '../context/TaskListContext'\r\n\r\nconst App = () => {\r\n    return (\r\n        <TaskListContextProvider>\r\n            <div className=\"container\">\r\n                <div className=\"app-wrapper\">\r\n                    <div className=\"main\">\r\n                        <Header />\r\n                        <TaskForm />\r\n                        <TaskList />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </TaskListContextProvider>\r\n    );\r\n};\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}